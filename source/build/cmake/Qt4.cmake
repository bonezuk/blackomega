set(CMAKE_INCLUDE_CURRENT_DIR ON)
set(CMAKE_AUTOMOC ON)

message ("Qt path")

set(QTVER "Qt4")
set(OMEGA_QT4 TRUE)

if (OMEGA_WIN32)
    set(QT_HOME "" CACHE PATH "Qt install directory")
    set(CMAKE_PREFIX_PATH "${QT_HOME}")
else (OMEGA_WIN32)
    string(STRIP "${CMAKE_PREFIX_PATH}" CMAKE_PREFIX_PATH)
    if (CMAKE_PREFIX_PATH STREQUAL "")
        message("Qt - 1")
        set(QT_HOME "" CACHE PATH "Qt install directory")
        set(CMAKE_PREFIX_PATH "${QT_HOME}")
    else (CMAKE_PREFIX_PATH STREQUAL "")
        message("Qt - 2")
        set(QT_HOME "${CMAKE_PREFIX_PATH}")
    endif (CMAKE_PREFIX_PATH STREQUAL "")
    message("${QT_HOME}")
    message("${CMAKE_PREFIX_PATH}")
endif (OMEGA_WIN32)

set(QT_HOME2 "${QT_HOME}")

find_package(Qt4 REQUIRED QtCore QtGui QtXml QtTest QtNetwork QtDBus)

if (${TIGER_SYSTEM_DEPS})
    if (NOT ${QT_HOME})
        set(QT_HOME "${BLACKOMEGA_PREFIX}")
    endif()
endif (${TIGER_SYSTEM_DEPS})

include_directories(AFTER "${QT_HOME}/include" )
include_directories(AFTER "${QT_HOME}/include/QtCore" )
include_directories(AFTER "${QT_HOME}/include/QtGui" )
include_directories(AFTER "${QT_HOME}/include/QtXml" )
include_directories(AFTER "${QT_HOME}/include/QtTest" )
include_directories(AFTER "${QT_HOME}/include/QtDBus" )
include_directories(AFTER "${QT_HOME}/include/QtNetwork" )

if (OMEGA_WIN32)

    if (TIGER_DEBUG_BUILD)
        message("Qt Set Debug")
        set(QT_CORE_LIBNAME "QtCored")
        set(QT_GUI_LIBNAME "QtGuid")
        set(QT_XML_LIBNAME "QtXmld")
        set(QT_NETWORK_LIBNAME "QtNetworkd")
        set(QT_TEST_LIBNAME "QtTestd")
        
        if (NOT OMEGA_MSVC12)
            set(QT_DBUS_LIBNAME "QtDBusd")
        endif (NOT OMEGA_MSVC12)
        
    else (TIGER_DEBUG_BUILD)
        set(QT_CORE_LIBNAME "QtCore")
        set(QT_GUI_LIBNAME "QtGui")
        set(QT_XML_LIBNAME "QtXml")
        set(QT_NETWORK_LIBNAME "QtNetwork")
        set(QT_TEST_LIBNAME "QtTest")
        if (NOT OMEGA_MSVC12)
            set(QT_DBUS_LIBNAME "QtDBus")
        endif (NOT OMEGA_MSVC12)
        
    endif (TIGER_DEBUG_BUILD)

    if (OMEGA_MSVC12 OR OMEGA_MSVC16)
        if (TIGER_DEBUG_BUILD)
            set(LIB_EGL_LIBNAME "libEGLd")
            set(LIB_GLES_LIBNAME "libGLESv2d")
        else (TIGER_DEBUG_BUILD)
            set(LIB_EGL_LIBNAME "libEGL")
            set(LIB_GLES_LIBNAME "libGLESv2")
        endif (TIGER_DEBUG_BUILD)
    endif (OMEGA_MSVC12 OR OMEGA_MSVC16)
    
elseif (OMEGA_MACOSX)

    if (${TIGER_DEBUG_BUILD})
        set(QT_CORE_LIBNAME "libQtCore")
        set(QT_GUI_LIBNAME "libQtGui")
        set(QT_XML_LIBNAME "libQtXml")
        set(QT_TEST_LIBNAME "libQtTest")
        set(QT_NETWORK_LIBNAME "libQtNetwork")
        set(QT_DBUS_LIBNAME "libQtDBus")

    else (${TIGER_DEBUG_BUILD})
        set(QT_CORE_LIBNAME "libQtCore")
        set(QT_GUI_LIBNAME "libQtGui")
        set(QT_XML_LIBNAME "libQtXml")
        set(QT_TEST_LIBNAME "libQtTest")
        set(QT_NETWORK_LIBNAME "libQtNetwork")
        set(QT_DBUS_LIBNAME "libQtDBus")
        
    endif (${TIGER_DEBUG_BUILD})

elseif (OMEGA_LINUX)

    set(QT_CORE_LIBNAME "libQtCore")
    set(QT_GUI_LIBNAME "libQtGui")
    set(QT_XML_LIBNAME "libQtXml")
    set(QT_TEST_LIBNAME "libQtTest")
    set(QT_NETWORK_LIBNAME "libQtNetwork")
    set(QT_DBUS_LIBNAME "libQtDBus")

endif (OMEGA_WIN32)
